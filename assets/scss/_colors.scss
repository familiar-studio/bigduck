@for $i from 1 through length($duck-colors) {
  .color-#{$i} {
    background-color: nth($duck-colors, $i);

    .bg-change {
      background-color: nth($duck-colors, $i);
    }

    .loading svg path {
      fill: nth($duck-colors, $i);
    }

    .color-change {
      color: nth($duck-colors, $i);
    }
    .underline-change {
      background-image: linear-gradient(
        nth($duck-colors, $i),
        nth($duck-colors, $i)
      );
    }

    .underline-change-thick {
      background-image: linear-gradient(
        rgba(nth($duck-colors, $i), 0) 25%,
        nth($duck-colors, $i) 25%
      ); //set up to make the thickness of the line look like a subpixel amount
    }
    .border-change {
      border-color: nth($duck-colors, $i);
    }

    .fill-change path {
      fill: nth($duck-colors, $i);
    }
    a:hover .hover-color,
    .hover-color a:hover {
      color: nth($duck-colors, $i);
    }
  }
}
.bg-change,
html {
  transition: background-color 1s ease;
  will-change: background-color;
}

.color-change {
  transition: color 1s ease;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  will-change: color;
}

.border-change {
  transition: border 1s ease;
}
.underline-change {
  transition: background-size .3s ease;
  background-position: center 90%;
  background-repeat: no-repeat;
  background-size: 100% 1px;
}

.underline-change-thick {
  transition: background-size .3s ease;
  background-position: center 95%;
  background-repeat: no-repeat;
  background-size: 100% 2px;
}

.fill-change path, .loading svg path {
  transition: fill 1s ease;
  will-change: fill;
}
a:hover .hover-color,
.hover-color a:hover {
  transition: color 1s ease;
}
.hover-color {
  will-change: color;
}
